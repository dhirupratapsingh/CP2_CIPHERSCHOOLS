/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
           
        if(head == nullptr)
        {
            return nullptr;
        }
        else 
        {
            ListNode *slow = head;
            ListNode *fast = head->next; 
            
            while(fast!=nullptr)
			{
				if (fast <= slow)
				{  
					return fast;
				}
				slow = slow->next;
				fast = fast->next;
			}
        return nullptr;
            
        }
        
        
    }
};
