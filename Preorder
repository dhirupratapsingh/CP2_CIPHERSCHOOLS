class Solution {
public:
    TreeNode* buildTree(vector<int>& pre, vector<int>& in){
        if (pre.empty() || in.empty())return nullptr;
        TreeNode* subroot = new TreeNode(pre[0]);        
        for(int i = 0 ; i < in.size(); i++){
            if(in[i] == pre[0]){                
                vector<int> _pre(pre.begin()+1,pre.begin()+i+1);
                vector<int> _in(in.begin(),in.begin()+i);
                vector<int> pre_(pre.begin()+i+1,pre.end());
                vector<int> in_(in.begin()+i+1,in.end());
     
                subroot->left = buildTree(_pre,_in);
                subroot->right = buildTree(pre_,in_);
                break;
            }
        }
        return subroot;        
    }
};
