class Solution {
public:
bool canPartition(vector& nums) {
int sum=0;
for(int i =0; i<nums.size();i++)
{
sum=sum+nums[i];
}
int s=sum;
sum=sum/2;
int t= s-sum;

    int dp[nums.size()][sum+1];
    
    for(int i=0; i<nums.size();i++)
    {
        dp[i][0]=1;
        
    }
    
    for(int i=0; i<=sum ;i++)
    {
        if(i==nums[0])
        {
            dp[0][i]=1;
            
        }
        else
        {
            dp[0][i]=0;
        }
        
    }
    
    for(int i=1;i < nums.size();i++)
    {
        for(int j=0 ; j<=sum;j++)
        {
            if(dp[i-1][j]==1)
            {
                dp[i][j]=1;
            }
            else 
            {
                if(j>=nums[i])
                {
                    dp[i][j]= dp[i-1][j-nums[i]];
                }
            }
        }
    }
    
  
    if(dp[nums.size()-1][sum]==1 )
    {
        if((sum-t)==0)
        {
            return true;
        }
    }
    
    return false;
    
    
}
};
